version: 2

models:
  - name: fact_purchase_order_line
    data_tests:
        - dbt_utils.equal_rowcount:
            compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
    columns:
      - name: purchase_order_line_key
        tests:
          - unique
          - not_null

      - name: purchase_order_key
        tests:
          - not_null
          - relationships:
              to: ref('stg_fact_purchase_order')
              field: purchase_order_key

      - name: product_key
        tests:
          - not_null
          - relationships:
              to: ref('dim_product')
              field: product_key

      - name: contact_person_key
        tests:
          - not_null
          - relationships:
              to: ref('dim_contact_person')
              field: contact_person_key

      - name: supplier_key
        tests:
          - not_null
          - relationships:
              to: ref('dim_supplier')
              field: supplier_key

      - name: purchase_order_line_indicator_key
        tests:
          - not_null
          - relationships:
              to: ref('dim_purchase_order_line_indicator')
              field: purchase_order_line_indicator_key

      - name: order_date
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: "'2013-01-01'"
              max_value: 'CURRENT_DATE'

      - name: last_receipt_date
        tests:
          - dbt_utils.accepted_range:
              min_value: "'2013-01-01'"
              max_value: 'CURRENT_DATE'

      - name: ordered_outers
        tests:
          - not_null
          - custom_test_equal_sum:
              compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
              compare_column: "ordered_outers"

      - name: received_outers
        tests:
          - not_null
          - custom_test_equal_sum:
              compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
              compare_column: "received_outers"

      - name: expected_unit_price_per_outer
        tests:
          - not_null
          - custom_test_equal_sum:
              compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
              compare_column: "expected_unit_price_per_outer"

      - name: expected_unit_price_outer
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: " = expected_unit_price_per_outer*received_outers "